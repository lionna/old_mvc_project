@model CarServiceApp.Models.ReportModel
@using CarServiceApp.Domain.Common
@using CarServiceApp.Helper
@using CarServiceApp.Domain.Extension

@{
    ViewBag.Title = "Детализация поставок запчастей и материалов";
    Layout = "_DefaultLayout";
}
<style>
    .redefined {
        padding: 0px;
        margin: 0;
    }

    .my-table {
        background-color: white;
        margin-top: 5px;
        margin-bottom: 5px;
        width: 100%;
    }

        .my-table tr:nth-child(odd) {
            background: #F5F5F5;
        }

        .my-table td, .my-table th {
            padding: 8px;
            border: 1px solid #CCCCCC;
        }

        .my-table tr:first-child {
            background: linear-gradient(to top, #EDEDED 40%, #F9F9F9 100%);
        }

        .my-table td:nth-child(4) span {
            white-space: nowrap;
            display: block;
            text-overflow: ellipsis;
            overflow: hidden;
            width: 300px;
        }

    .my-label {
        float: left;
        padding-top: 5px;
        padding-right: 5px;
    }

    #year {
        width: 100px !important;
    }

    #month {
        width: 150px !important;
    }
</style>
 
<div class="alert alert-secondary" role="alert">
    Детализация поставок запчастей и материалов
</div>
<div class="col-md-12 bs-callout bs-callout-info">
    <form id="form-search" method="post" action="/ReportView/ReportByProviders"
          data-ajax="true" data-ajax-update="#contents_result" data-ajax-loading="#loading"
          data-ajax-duration="0">
        <div class="row">
            <input type="hidden" name="page" />
            <div class="col-md-2 form-group">
                <label for="year" class="form-label">Выбрать год:</label>
                @Html.DropDownList("year", Model.Years as SelectList, new { @class = "form-control" })
            </div>
            <div class="col-md-2 form-group">
                <label for="month" class="form-label">Выбрать месяц:</label>
                @Html.DropDownList("month", Model.Months as SelectList, new { @class = "form-control" })
            </div>
            <div class="col-md-3 form-group d-grid gap-1">
                <button type="submit" class="btn btn-outline-primary"><i class="far fa-file-alt"></i> Сформировать отчет</button>
                <button type="button" class="btn btn-outline-success" onclick="window.location.href = '/ReportView/PrintReportByProviders/?year=' + $('#year').val() + '&month=' + $('#month').val()"><i class="fas fa-print"></i> Печать</button>
            </div>
        </div>
    </form>

    <div id="contents_result">
        <table class="my-table table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th width="40%">Поставщик</th>
                    <th width="5%">Год</th>
                    <th width="10%">Месяц</th>
                    <th width="10%">Дата</th>
                    <th width="20%">№ ТТН</th>
                    <th width="15%">Сумма BYN</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in (List<CarServiceApp.Domain.Model.AmountMoneyByProvider>)Model?.GridItem?.Data)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Year</td>
                        <td>
                            @* @((ViewBag.DictMonthName as Dictionary<int, string>).ContainsKey(item.Month ?? 0) ? (ViewBag.DictMonthName as Dictionary<int, string>)[item.Month.Value] : null)   *@

                            @*  @{
                        var monthName = "";
                        if (ViewBag.DictMonthName is Dictionary<int, string> dictMonthName && dictMonthName.ContainsKey(item.Month ?? 0))
                        {
                        monthName = dictMonthName[item.Month.Value];
                        }
                        }
                        @monthName *@

                            @{
                                var monthName = "";
                                var monthsList = Model?.Months as SelectList;
                                if (monthsList != null && item.Month.HasValue)
                                {
                                    var selectedMonth = monthsList.FirstOrDefault(m => m.Value == item.Month.ToString());
                                    if (selectedMonth != null)
                                    {
                                        monthName = selectedMonth.Text;
                                    }
                                }
                            }
                            @monthName

                        </td>
                        <td>@(item.DeliveryDate != null ? item.DeliveryDate.Value.ToString("dd-MM-yyyy") : "")</td>
                        <td>@item.LotNumber</td>
                        <td>@(Math.Round(item.Amount ?? 0, 2)) </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<pager paged-result="@Model.GridItem" page-handler="ReportOrders" css-class="pagination"></pager>
<img id="loading" src="@Url.Content("~/img/loading.gif")" style="display: none; position: absolute; margin: auto; top: 0; bottom: 0; left: 0; right: 0" />

<style>
    .pagination {
        display: inline-block;
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;
    }

        .pagination > li {
            display: inline;
        }

            .pagination > li > a,
            .pagination > li > span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.428571429;
                text-decoration: none;
                background-color: #ffffff;
                border: 1px solid #dddddd;
            }

            .pagination > li:first-child > a,
            .pagination > li:first-child > span {
                margin-left: 0;
                border-bottom-left-radius: 4px;
                border-top-left-radius: 4px;
            }

            .pagination > li:last-child > a,
            .pagination > li:last-child > span {
                border-top-right-radius: 4px;
                border-bottom-right-radius: 4px;
            }

            .pagination > li > a:hover,
            .pagination > li > span:hover,
            .pagination > li > a:focus,
            .pagination > li > span:focus {
                background-color: #eeeeee;
            }

        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus {
            z-index: 2;
            color: #ffffff;
            cursor: default;
            background-color: #428bca;
            border-color: #428bca;
        }

        .pagination > .disabled > span,
        .pagination > .disabled > a,
        .pagination > .disabled > a:hover,
        .pagination > .disabled > a:focus {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
            border-color: #dddddd;
        }

    .pagination-lg > li > a,
    .pagination-lg > li > span {
        padding: 10px 16px;
        font-size: 18px;
    }

    .pagination-lg > li:first-child > a,
    .pagination-lg > li:first-child > span {
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
    }

    .pagination-lg > li:last-child > a,
    .pagination-lg > li:last-child > span {
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
    }

    .pagination-sm > li > a,
    .pagination-sm > li > span {
        padding: 5px 10px;
        font-size: 12px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span {
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
    }

    .pagination-sm > li:last-child > a,
    .pagination-sm > li:last-child > span {
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
    }

    .pager {
        padding-left: 0;
        margin: 20px 0;
        text-align: center;
        list-style: none;
    }

        .pager:before,
        .pager:after {
            display: table;
            content: " ";
        }

        .pager:after {
            clear: both;
        }

        .pager:before,
        .pager:after {
            display: table;
            content: " ";
        }

        .pager:after {
            clear: both;
        }

        .pager li {
            display: inline;
        }

            .pager li > a,
            .pager li > span {
                display: inline-block;
                padding: 5px 14px;
                background-color: #ffffff;
                border: 1px solid #dddddd;
                border-radius: 15px;
            }

                .pager li > a:hover,
                .pager li > a:focus {
                    text-decoration: none;
                    background-color: #eeeeee;
                }

        .pager .next > a,
        .pager .next > span {
            float: right;
        }

        .pager .previous > a,
        .pager .previous > span {
            float: left;
        }

        .pager .disabled > a,
        .pager .disabled > a:hover,
        .pager .disabled > a:focus,
        .pager .disabled > span {
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
        }
</style>